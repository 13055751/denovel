name: Denovel Cross-Platform Build and Release

on:
  push:
    tags:
      - 'v*' # Trigger on version tags like v1.0.0
    

jobs:
  build:
    name: Build Denovel
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            artifact_name: denovel-linux
            bin_ext: ''
          - os: macos-latest
            artifact_name: denovel-macos
            bin_ext: ''
          - os: windows-latest
            artifact_name: denovel-windows
            bin_ext: '.exe'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Deno
      uses: denoland/setup-deno@v1
      with:
        deno-version: latest
        
    - name: Install dependencies
      run: deno cache --unstable-raw-imports --unstable-kv exe.ts
      
    - name: Compile to binary
      run: deno compile --unstable-raw-imports --unstable-kv --allow-all --include=data.d.ts --no-check --include templates --include static  --output=denovel_${{ matrix.os }}${{ matrix.bin_ext }} exe.ts
      
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: denovel_${{ matrix.os }}${{ matrix.bin_ext }}
        if-no-files-found: error
        
  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Download Linux Artifact
      uses: actions/download-artifact@v4
      with:
        name: denovel-linux
        
    - name: Download macOS Artifact
      uses: actions/download-artifact@v4
      with:
        name: denovel-macos
        
    - name: Download Windows Artifact
      uses: actions/download-artifact@v4
      with:
        name: denovel-windows
        
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          denovel
          denovel.exe
        generate_release_notes: true
        tag_name: ${{ github.ref_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}